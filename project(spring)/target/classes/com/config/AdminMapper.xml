<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminMapper">
	<!-- 1. admin 로그인 -->
	<select id="adminlogin" parameterType="hashmap" resultType="AdminDTO">
		select adminId,adminPasswd
		from admin
		where adminId = #{adminId} and adminPasswd= #{adminPasswd}
	</select>
	
	<!-- 2. member 리스트 -->
	<select id="memberlist"  resultType="MemberDTO">
		select rownum,mId,mPasswd,mName,mPhone,mLastLogin
		from member
	</select>
	
	<!-- 3. member 삭제 (휴면계정/마지막 로그인 시간 기록+현재 시간하고 비교하여 3달 이상 미접속 시 삭제처리)-->
	<delete id="m_delete" parameterType="string">
		delete 
		from member
		where mId = #{mId}
	</delete>
	
	<!-- 4. member 리스트 -->
	<select id="m_updatelist" parameterType="int" resultType="MemberDTO">
		select rownum,mId,mPasswd,mName,mPhone
		from (select rownum as rnum, t.mId,t.mPasswd,t.mName, 
		t.mPhone from member t) a where a.rnum=#{rownum}
	</select>
	
	
	
	
	<!-- 5. so 리스트 -->
	<select id="soList"  resultType="SoDTO">
		select rownum,soId,soPasswd,soName,soPhone,soLicense,soPost,soAddr,soLevel,to_char(soJoindate,'YYYY-MM-DD') as soJoindate
   		from shopowner
	</select>
	
	<!-- 6. 회원 레벨이 0인  shopowner-->
	<select id="soList2"  resultType="SoDTO">
		select rownum,soId,soLevel,to_char(soJoindate,'YYYY-MM-DD') as soJoindate
   		from shopowner
   		where soLevel=0
	</select>
   
    <!-- 7. soLevel 부여 -->
	<update id="soLevelChange" parameterType="hashmap">
		update shopowner
		set soLevel=#{soLevel}
		where soId=#{soId}
	</update>
	
	
</mapper>



